library(lubridate)
library(dplyr)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
data <-select(activdat, time, datetime, steps)
summary(data)
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
hist(dailysteptotals, breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
nas <- tapply(data$steps,date(data$datetime),function(x) sum(is.na(x)))
# how many days have all NA values?
sum(nas %in% 288)
# how many days have between 0 and 288 NA values?
sum(nas > 0 & nas < 288)
baddays <- nas==288
hist(dailysteptotals[!baddays], breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
mn <- mean(dailysteptotals[!baddays])
mn
md <- median(dailysteptotals[!baddays])
md
perday <- tapply(data$steps, data$time, mean, na.rm=TRUE)
plot(data$time[1:288], perday, type = "l")
date$time[1:28]
data$time[1:28]
data$time[1:288]
activdat <- read.csv(unz("activity.zip","activity.csv"))
summary(activdat)
str(activdat)
library(lubridate)
library(dplyr)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2:00",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
hist(dailysteptotals, breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
class(activdat)
summary(activdat)
activdat <- read.csv(unz("activity.zip","activity.csv"))
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2:00",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE) %>%
paste0(":00")
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2\:00",.,perl=TRUE)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE) %>%
sub("(.+)","\\1:00",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- as.POSIXct(activdat$time, format= "%H%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- hm(activdat$time)
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- format(activdat$time, format= "%H%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- hm(activedat$time) %>% parse_date_time("hms") %>% format(format= "%H%M%S")
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- hm(activdat$time) %>% parse_date_time("hms") %>% format(format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- hm(activdat$time) %>% parse_date_time("HMS") %>% format(format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- hm(activdat$time) %>% parse_date_time(orders="HMS") %>% format(format= "%H%M%S")
data <-select(activdat, time, datetime, steps)
summary(data)
data$time[1:288]
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- format(as.POSIXct(strptime(activdat$time, "%Y-%m-%d  %H:%M:%S",tz="")),format = "%H:%M") %>% as.POSIXct(format = "%H:%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
activdat$time <- format(as.POSIXct(strptime(activdat$datetime, "%Y-%m-%d  %H:%M:%S",tz="")),format = "%H:%M") %>% as.POSIXct(format = "%H:%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
as.POSIXct(activdat$time, format = "%H:%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
as.POSIXct(activdat$datetime, format = "%H:%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
as.POSIXct(activdat$datetime, format = "-%Y %H:%M")
data <-select(activdat, time, datetime, steps)
summary(data)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
data <-select(activdat, time, datetime, steps)
summary(data)
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
```Show in New WindowClear OutputExpand/Collapse Output
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
as.POSIXct(activdat$datetime, format = "%H:%M")[1]
as.POSIXct(activdat$datetime, format = "%H:%M")[288]
names(data)
wday(1)
wday(1, label=TRUE)
wday(1, label=TRUE, abbr = FALSE)
wday(1, label=TRUE, abbr = FALSE)[[1]]
wday(1, label=TRUE, abbr = FALSE)[1]
"Sunday":"Saturday"
day(today())
today()
weekdays(today()+1:6)
order(weekdays(today()+1:7))
sort(weekdays(today()+1:7))
sort(wday(today()+1:7))
sort(wday(today()+1:7, label = TRUE, abbr = FALSE))
arrange(data,datetime)
data$day <- weekdays(data$datetime)
mondat <- tapply(data$steps[data$day=="Monday"], data$time[data$day=="Monday"], mean, na.rm=TRUE)
weddat<- tapply(data$steps[data$day=="Wednesday"], data$time[data$day=="Wednesday"], mean, na.rm=TRUE)
thudat<- tapply(data$steps[data$day=="Thursday"], data$time[data$day=="Thursday"], mean, na.rm=TRUE)
fridat<- tapply(data$steps[data$day=="Friday"], data$time[data$day=="Friday"], mean, na.rm=TRUE)
satdat<- tapply(data$steps[data$day=="Saturday"], data$time[data$day=="Saturday"], mean, na.rm=TRUE)
sundat<- tapply(data$steps[data$day=="Sunday"], data$time[data$day=="Sunday"], mean, na.rm=TRUE)
head(data)
data$steps[date(data$datetime)=="2012-10-01"|date(data$datetime)=="2012-10-08"]<-mondat
data$steps[date(data$datetime)=="2012-11-01"]<-thudat
data$steps[date(data$datetime)=="2012-11-04"]<-sundat
data$steps[date(data$datetime)=="2012-11-09"|date(data$datetime)=="2012-11-30"]<-fridat
data$steps[date(data$datetime)=="2012-11-10"]<-satdat
data$steps[date(data$datetime)=="2012-11-14"]<-weddat
data$steps[date(data$datetime)=="2012-11-01"]
data$steps[date(data$datetime)=="2012-10-01"|date(data$datetime)=="2012-10-08"]
sum(is.na(data$steps))
summary(data)
colors()
newdata$daytype <- if(newdata$day=="Saturday"|newdata$day=="Sunday"){"weekend"} else{"weekday"}
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- as.factor("weekend")
activdat <- read.csv(unz("activity.zip","activity.csv"))
summary(activdat)
str(activdat)
library(lubridate)
library(dplyr)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
data <-select(activdat, time, datetime, steps)
summary(data)
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
hist(dailysteptotals, breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
nas <- tapply(data$steps,date(data$datetime),function(x) sum(is.na(x)))
# how many days have all NA values?
sum(nas %in% 288)
# how many days have between 0 and 288 NA values?
sum(nas > 0 & nas < 288)
baddays <- nas==288
hist(dailysteptotals[!baddays], breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
mn <- mean(dailysteptotals[!baddays])
mn
md <- median(dailysteptotals[!baddays])
md
perday <- tapply(data$steps, data$time, mean, na.rm=TRUE)
highest <- data$time[1:288][perday==max(perday)]
plot(as.POSIXct(data$datetime, format = "%H:%M")[1:288] , perday, type = "l", main = "Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
points(as.POSIXct(data$datetime, format = "%H:%M")[1:288][perday==max(perday)], max(perday), pch=19, col="red")
missingdates <- unique(date(data$datetime))[nas %in% 288]
missingdates
weekdays(missingdates)
data$day <- weekdays(data$datetime)
mondat <- tapply(data$steps[data$day=="Monday"], data$time[data$day=="Monday"], mean, na.rm=TRUE)
weddat <- tapply(data$steps[data$day=="Wednesday"], data$time[data$day=="Wednesday"], mean, na.rm=TRUE)
thudat <- tapply(data$steps[data$day=="Thursday"], data$time[data$day=="Thursday"], mean, na.rm=TRUE)
fridat <- tapply(data$steps[data$day=="Friday"], data$time[data$day=="Friday"], mean, na.rm=TRUE)
satdat <- tapply(data$steps[data$day=="Saturday"], data$time[data$day=="Saturday"], mean, na.rm=TRUE)
sundat <- tapply(data$steps[data$day=="Sunday"], data$time[data$day=="Sunday"], mean, na.rm=TRUE)
newdata <- data
newdata$steps[date(data$datetime)=="2012-10-01"|date(data$datetime)=="2012-10-08"]<-mondat
newdata$steps[date(data$datetime)=="2012-11-01"]<-thudat
newdata$steps[date(data$datetime)=="2012-11-04"]<-sundat
newdata$steps[date(data$datetime)=="2012-11-09"|date(data$datetime)=="2012-11-30"]<-fridat
newdata$steps[date(data$datetime)=="2012-11-10"]<-satdat
newdata$steps[date(data$datetime)=="2012-11-14"]<-weddat
sum(is.na(newdata$steps))
dailysteptotals2 <- tapply(newdata$steps,date(newdata$datetime),sum)
hist(dailysteptotals2, breaks = 22, col = "lightblue", xlab = "Total steps per day", main = "Histogram with Imputed values compared with Original")
hist(dailysteptotals[!baddays], breaks = 22, col = "blue", add=TRUE)
legend("topright",c("Original", "Updated"), fill = c("blue","lightblue"))
# Calculate the new mean and compare with the old mean
mn2 <- mean(dailysteptotals2)
mn2-mn
# Calculate the new median and compare with the old median
md2 <- median(dailysteptotals2)
md2-md
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- as.factor("weekend")
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- as.factor("weekday")
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkend <- tapply(wkend$steps, wkend$time, mean)
par(mfrow=c(2,1))
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkd, type = "l", col="blue", main = "Weekday Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
head(newdata)
head(newdata)
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- "weekday"
head(newdata)
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- "weekend"
perwkd <- tapply(wkd$steps, wkd$time, mean)
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkemd <- tapply(wkend$steps, wkd$time, mean)
perwkemd <- tapply(wkend$steps, wkend$time, mean)
par(mfrow=c(2,1))
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkd, type = "l", col="blue", main = "Weekday Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkend, type = "l", col="blue", main = "Weekend Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
length(perwkd)
length(perwkend)
perwkend <- tapply(wkend$steps, wkend$time, mean)
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkend, type = "l", col="blue", main = "Weekend Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
range(perwkd)
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- "weekend"
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- "weekday"
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkend <- tapply(wkend$steps, wkend$time, mean)
par(mfrow=c(2,1), ylim=240)
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkd, type = "l", col="blue", main = "Weekday Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkend, type = "l", col="blue", main = "Weekend Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
par(mfrow=c(2,1), yaxp=c(0,250,5)
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkd, type = "l", col="blue", main = "Weekday Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkend, type = "l", col="blue", main = "Weekend Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
par(mfrow=c(2,1), yaxp=c(0,250,5))
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkd, type = "l", col="blue", main = "Weekday Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
plot(as.POSIXct(newdata$datetime, format = "%H:%M")[1:288] , perwkend, type = "l", col="blue", main = "Weekend Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
bye()
p <- xyplot(time ~ steps | as.factor(daytype), data = newdata, type = "l", layout = c(1,2))
print(p)
p <- xyplot(steps ~ time | as.factor(daytype), data = newdata, type = "l", layout = c(1,2))
print(p)
detach("package:swirl", unload=TRUE)
str(xyplot)
str(xyplot())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
detach("package:lattice", unload=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkend <- tapply(wkend$steps, wkend$time, mean)
tm <-as.POSIXct(newdata$datetime, format = "%H:%M")[1:288]
par(mfrow=c(2,1))
plot(tm, perwkd, type = "l", col="blue",ylab= "Average steps per 5 minutes",xlab = NULL, main="")
title(main=list("Time Series of Average Steps per Time Interval", outer = TRUE), sub=list("Weekday", bty="l", bg="lightorange"))
source('~/.active-rstudio-document')
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- "weekend"
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- "weekday"
newdata$tm <- as.POSIXct(newdata$datetime, format = "%H:%M")
library(lattice)
p <- xyplot(steps ~ time | as.factor(daytype), data = newdata, type = "l", layout = c(1,2))
print(p)
seq(10,20,2)
seq(00:00,24:00,04:00)
p <- xyplot(steps ~ time | as.factor(type), data = plotdat, type = "l", layout = c(1,2) )
print(p)
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- "weekend"
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- "weekday"
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkend <- tapply(wkend$steps, wkend$time, mean)
tm <-as.POSIXct(newdata$datetime, format = "%H:%M")[1:288]
plotdat <- data.frame(time=c(tm,tm),steps=c(perwkd,perwkend), type=c(rep("weekday",288),rep("weekend",288)))
library(lattice)
p <- xyplot(steps ~ time | as.factor(type), data = plotdat, type = "l", layout = c(1,2))
print(p)
par(scale)
par(p)
par("scale")
xvalues(p)
p
str(p)
head(newdata)
plotdat
c(tm,tm)
tm
rep(tm,2)
c(perwkd,perwkend)
class(perwkd)
dim(perwkd)
str(perwkd)
plotdat$time
plotdat <- data.frame(time=rep(tm,2),steps=c(perwkd,perwkend), type=c(rep("weekday",288),rep("weekend",288)))
plotdat$time
p <- xyplot(steps ~ time | as.factor(type), data = plotdat, type = "l", layout = c(1,2))
print(p)
plotdat$steps
head(plotdat)
tail(plotdat)
activdat <- read.csv(unz("activity.zip","activity.csv"))
summary(activdat)
str(activdat)
library(lubridate)
library(dplyr)
activdat$time <- sprintf("%04d",activdat$interval)
activdat$time <- activdat$time %>%
sub("([0-9]{2})([0-9]{2})","\\1:\\2",.,perl=TRUE)
activdat$datetime <- activdat$time %>%
paste(activdat$date,.,sep=" ") %>% ymd_hm
data <-select(activdat, time, datetime, steps)
summary(data)
dailysteptotals <- tapply(data$steps,date(data$datetime),sum,na.rm=TRUE)
range(dailysteptotals)
hist(dailysteptotals, breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
nas <- tapply(data$steps,date(data$datetime),function(x) sum(is.na(x)))
# how many days have all NA values?
sum(nas %in% 288)
# how many days have between 0 and 288 NA values?
sum(nas > 0 & nas < 288)
baddays <- nas==288
hist(dailysteptotals[!baddays], breaks = 22, col = "blue", xlab = "Total steps per day", main = "Histogram of Daily Step Totals")
mn <- mean(dailysteptotals[!baddays])
mn
md <- median(dailysteptotals[!baddays])
md
perday <- tapply(data$steps, data$time, mean, na.rm=TRUE)
highest <- data$time[1:288][perday==max(perday)]
plot(as.POSIXct(data$datetime, format = "%H:%M")[1:288] , perday, type = "l", main = "Time Series of Average Steps Taken per Interval", ylab= "Average steps per 5 minutes", xlab = "Time of the Day", xaxs='r')
points(as.POSIXct(data$datetime, format = "%H:%M")[1:288][perday==max(perday)], max(perday), pch=19, col="red")
missingdates <- unique(date(data$datetime))[nas %in% 288]
missingdates
weekdays(missingdates)
data$day <- weekdays(data$datetime)
mondat <- tapply(data$steps[data$day=="Monday"], data$time[data$day=="Monday"], mean, na.rm=TRUE)
weddat <- tapply(data$steps[data$day=="Wednesday"], data$time[data$day=="Wednesday"], mean, na.rm=TRUE)
thudat <- tapply(data$steps[data$day=="Thursday"], data$time[data$day=="Thursday"], mean, na.rm=TRUE)
fridat <- tapply(data$steps[data$day=="Friday"], data$time[data$day=="Friday"], mean, na.rm=TRUE)
satdat <- tapply(data$steps[data$day=="Saturday"], data$time[data$day=="Saturday"], mean, na.rm=TRUE)
sundat <- tapply(data$steps[data$day=="Sunday"], data$time[data$day=="Sunday"], mean, na.rm=TRUE)
newdata <- data
newdata$steps[date(data$datetime)=="2012-10-01"|date(data$datetime)=="2012-10-08"]<-mondat
newdata$steps[date(data$datetime)=="2012-11-01"]<-thudat
newdata$steps[date(data$datetime)=="2012-11-04"]<-sundat
newdata$steps[date(data$datetime)=="2012-11-09"|date(data$datetime)=="2012-11-30"]<-fridat
newdata$steps[date(data$datetime)=="2012-11-10"]<-satdat
newdata$steps[date(data$datetime)=="2012-11-14"]<-weddat
sum(is.na(newdata$steps))
dailysteptotals2 <- tapply(newdata$steps,date(newdata$datetime),sum)
hist(dailysteptotals2, breaks = 22, col = "lightblue", xlab = "Total steps per day", main = "Histogram with Imputed values compared with Original")
hist(dailysteptotals[!baddays], breaks = 22, col = "blue", add=TRUE)
legend("topright",c("Original", "Updated"), fill = c("blue","lightblue"))
# Calculate the new mean and compare with the old mean
mn2 <- mean(dailysteptotals2)
mn2-mn
# Calculate the new median and compare with the old median
md2 <- median(dailysteptotals2)
md2-md
newdata$daytype[newdata$day=="Saturday"|newdata$day=="Sunday"] <- "weekend"
newdata$daytype[!newdata$day=="Saturday" & !newdata$day=="Sunday"] <- "weekday"
wkd <- filter(newdata, daytype=="weekday")
wkend <- filter(newdata, daytype=="weekend")
perwkd <- tapply(wkd$steps, wkd$time, mean)
perwkend <- tapply(wkend$steps, wkend$time, mean)
tm <-as.POSIXct(newdata$datetime, format = "%H:%M")[1:288]
plotdat <- data.frame(time=rep(tm,2),steps=c(perwkd,perwkend), type=c(rep("Weekday",288),rep("Weekend",288)))
library(lattice)
p <- xyplot(steps ~ time | as.factor(type), data = plotdat, type = "l", layout = c(1,2), main="Time Series of Average Steps per Time Interval", xlab = "Time of the Day", ylab = "Number of Steps Taken", xaxs='r')
print(p)
length(newdata$datetime)
newdata$datetime[1:288]
rep(newdata$datetime[1:288],2)
class(newdata$time)
for(i in 0:23){for(j in 0:11){qqq[12*i+j+1]<- as.numeric(paste0(i,5*j))}}
qqq<-vector()
for(i in 0:23){for(j in 0:11){qqq[12*i+j+1]<- as.numeric(paste0(i,5*j))}}
qqq
for(i in 0:23){for(j in 0:11){qqq[12*i+j+1]<- as.numeric(paste0(sprintf(%2.0f,i),sprintf(%2.0f,5*j))}}
for(i in 0:23){for(j in 0:11){qqq[12*i+j+1]<- as.numeric(paste0(sprintf("%2.0f",i),sprintf("%2.0f",5*j))}}
for(i in 0:23){for(j in 0:11){qqq[12*i+j+1]<- as.numeric(paste0(sprintf("%2.0f",i),sprintf("%2.0f",5*j)))}}
qqq
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
knit2html("PA1_template.Rmd")
getwd()
setwd("./RepData_PeerAssessment1/")
knit2html("PA1_template.Rmd")
rmarkdown::render("PA_template.Rmd")
dir()
rmarkdown::render("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
